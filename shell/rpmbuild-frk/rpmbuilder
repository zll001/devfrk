###################################################
##
## Copyright (2017, ) Institute of Software, CAS
##
## Author: wuheng@{iscas.ac.cn}
## Date  : 2018/11/29
##
#####################################################

function parse()
{
  name=$(cat $1 | grep -w "NAME" | grep -v "#NAME" | awk '{print$2}')
  version=$(cat $1 | grep -w "VERSION" | grep -v "#VERSION" | awk '{print$2}')

  if [[ -z $name || -z $version ]]
  then
    echo "Missing Name or Version"
    exit
  fi
 
  if [[ ! -d $name-$version ]]
  then
    echo "Missing diectory "$name-$version, "or you have wrong name with version"
    exit
  fi

  rm -rf $name.spec
  cp /root/build.spec $name.spec   

  sed -i s/'_NAME_'/$name/g `grep '_NAME_' -rl $name.spec`  
  sed -i s/'_VERSION_'/$version/g `grep '_VERSION_' -rl $name.spec`  
 
  while read line
  do
    if [[ ${line:0:1} == "#" ]]
    then
      continue
    fi

    kind=$(echo $line | awk '{print$1}')
    if [[ $kind == "NAME" || $kind == "VERSION" ]]
    then
        continue
    fi
    if [[ $kind == "GIT" || $kind == "MAINTAINER" || $kind == "WORKDIR" || $kind == "DEP"  ]]
    then
      str=$(echo $line | awk -F"$kind " '{print$2}')
      key="_"$kind"_"
      value=${str/"/"/\\/}
      echo $key,$value
      echo "sed -i 's/$key/$value/g' `grep $key -rl $name.spec`"
      sed -i s/$key/$value/g `grep $key -rl $name.spec`
    elif [[ $kind == "CMD" ]]
    then
      cmd=$(echo $line | awk -F"$kind" '{print$2}')
      echo $cmd
    else
      echo continue
    fi
  done < $1

git=1811
mtr=wuheng@iscas.ac.cn
dir=\/opt
sed -i s/_GIT_/$git/g `grep _GIT_ -rl $name.spec`
sed -i s/_MAINTAINER_/$mtr/g `grep _MAINTAINER_ -rl $name.spec`
sed -i s/_WORKDIR_/$dir/g `grep _WORKDIR_ -rl $name.spec`

mkdir -p /root/rpmbuild/SOURCES/
rm -rf $name-$version.tar.gz
\cp $1 $name-$version/
tar zcvf $name-$version.tar.gz $name-$version/*
mv -f $name-$version.tar.gz /root/rpmbuild/SOURCES/$name-$version.tar.gz
mkdir -p /root/rpmbuild/SPECS/
mv -f $name.spec /root/rpmbuild/SPECS/$name.spec
}

if [[ $1 == "parse" ]]
then
  if [[ -z $2 ]]
  then
    parse "RpmFile"
  else
    parse $2
  fi
fi
